-- Register the behaviour
behaviour("PF_InspectAnim")

function PF_InspectAnim:Initialise()
	PhoenixDebug.Print("PF_InspectAnim | Initialise", "log")
end

function PF_InspectAnim:Update()
	local player = Player.actor
	if player.isDead or player.isSwimming or player.isFallenOver or player.isInWater or player.isOnLadder or not player.activeVehicle == nil or player.activeWeapon.isLocked then return end

	if Input.GetKeyBindButtonDown(KeyBinds.Reload) and not player.activeWeapon.isReloading then
		self:StartInspect()
	end
end

function PF_InspectAnim:StartInspect()
	Player.actor.activeWeapon.animator.SetTrigger("inspect")
	Player.actor.activeWeapon.LockWeapon()
	self.script.GetScript(m_PhoenixBase.FPSHud):FadeUI(false)
	self.script.StartCoroutine("FinishInspect")
end

-- Finishes the inspect 
function PF_InspectAnim:FinishInspect()
	coroutine.yield(WaitForSeconds(Player.actor.activeWeapon.gameObject.GetComponent(DataContainer).GetFloat("inspectTime")))
	self.script.GetScript(m_PhoenixBase.FPSHud):FadeUI(true)
	Player.actor.activeWeapon.UnlockWeapon()
end