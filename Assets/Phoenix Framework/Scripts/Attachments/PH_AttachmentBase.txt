-- Register the behaviour
behaviour("PH_AttachmentBase")

function PH_AttachmentBase:Start()
	-- Run when behaviour is created
	PhoenixAttachment.StoreComponents(self)
	PhoenixAttachment.InitialSetup(self)
	PhoenixAttachment.DisableOnStart(self)
end

function PH_AttachmentBase:Update()
	if Input.GetKeyDown(KeyCode.T) then
		PhoenixAttachmentUI.ToggleVisibility(self, not self.UI_CanvasGroup.GetBool("activeSelf"))
	end

	if Input.GetKeyDown(KeyCode.F1) then
		PhoenixAttachmentUI.RefreshText(self)
	end
end

-- FUNCTIONS
PhoenixAttachment = {
	-- Stores all the components on start
	StoreComponents = function (self)
		_G.PhoenixDebug.SimplePrint("Storing Components")

		-- Base Canvas
		self.UI_CanvasGroup = self.targets.UI_CanvasGroup.gameObject.GetComponent(Animator) -- Returns the Animator
		self.UI_Canvas = self.targets.UI_Canvas.gameObject.GetComponent(Canvas) -- Returns the Canvas
		self.UI_CanvasBack = self.targets.UI_CanvasBack.gameObject.GetComponent(Canvas) -- Returns Canvas

		-- Canvas Text
		self.UI_WeaponNameText = self.targets.UI_WeaponNameText.gameObject.GetComponent(TextMeshProUGUI) -- Returns the TextMeshPro Text
		self.UI_WeaponHistoryTitle = self.targets.UI_WeaponHistoryTitle.gameObject.GetComponent(TextMeshProUGUI) -- Returns the TextMeshPro Text
		self.UI_WeaponHistory = self.targets.UI_WeaponHistory.gameObject.GetComponent(TextMeshProUGUI)
	end,

	-- Gets called on start, Basically the constructor
	InitialSetup = function (self)
		-- Sets up the UI_CanvasBack Stuff
		self.UI_CanvasBack.worldCamera = PlayerCamera.fpCamera
		self.UI_CanvasBack.planeDistance = 0.5
	end,

	-- Disables Objects on start
	DisableOnStart = function(self)

	end
}

PhoenixAttachmentUI = {
	-- Toggles the visibilty of the Attachment Hud
	ToggleVisibility = function (self, state)
		_G.PhoenixDebug.BoolPrint("Toggle Visibility", state)
		self.UI_CanvasGroup.SetBool("activeSelf", state)
	end,

	-- Refreshes the attachment menu text
	RefreshText = function (self)
		local newWeaponName = Player.actor.activeWeapon.gameObject.GetComponent(DataContainer).GetString("weaponName")
		local newAuthorName = Player.actor.activeWeapon.gameObject.GetComponent(DataContainer).GetString("creatorName")
		local newHistoryTitle = Player.actor.activeWeapon.gameObject.GetComponent(DataContainer).GetString("weaponHistoryTitle")
		local newHistoryDesc = Player.actor.activeWeapon.gameObject.GetComponent(DataContainer).GetString("weaponHistory")
		
		self.UI_WeaponNameText.text = newWeaponName .. "<size=32> </size><size=16><color=#808080ff><align=right>By: " .. newAuthorName .. "</align></color></size>"
		self.UI_WeaponHistoryTitle.text = newHistoryTitle
		self.UI_WeaponHistory.text = newHistoryDesc
	end,
}